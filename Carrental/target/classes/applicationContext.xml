<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:flow="http://www.springframework.org/schema/webflow-config"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	   		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	   		http://www.springframework.org/schema/context
	   		http://www.springframework.org/schema/context/spring-context-3.2.xsd
			http://www.springframework.org/schema/mvc 
			http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
			http://www.springframework.org/schema/util
			http://www.springframework.org/schema/util/spring-util-3.2.xsd
			http://www.springframework.org/schema/aop
			http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
			http://www.springframework.org/schema/webflow-config
			http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd
			http://www.springframework.org/schema/tx
			http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
			">

	<mvc:view-controller path="/anon/login" view-name="anon/login" />
	<mvc:view-controller path="/" view-name="all/home" />
	<mvc:view-controller path="/admin/selectOrders"
		view-name="forAdmin/selectOrders" />
	<mvc:view-controller path="/admin/editedSuccessfully"
		view-name="forAdmin/editedSuccessfully" />
	<mvc:view-controller path="/admin/orderSelector"
		view-name="admin/orderSelector" />
	<mvc:resources mapping="/resources/**" location="/resources/" />

	<!-- <context:property-placeholder properties-ref="deployProperties" /> -->

	<!-- Activates various annotations to be detected in bean classes -->
	<context:annotation-config />

	<!-- <bean id="myAspect" class="carrental.controllers.MyAspect" /> <aop:config> 
		<aop:aspect ref="myAspect"> <aop:before pointcut="execution(* carrental.repository.jdbc.UserDaoImpl.find(..))" 
		method="bla()" /> </aop:aspect> </aop:config> -->

	<!-- Scans the classpath for annotated components that will be auto-registered 
		as Spring beans. For example @Controller and @Service. Make sure to set the 
		correct base-package -->
	<context:component-scan base-package="carrental" />

	<!-- Configures the annotation-driven Spring MVC Controller programming 
		model. Note that, with Spring 3.0, this tag works in Servlet MVC only! -->
	<mvc:annotation-driven />

	<util:properties id="boneCpProps" location="classpath:boneCp.properties" />

	<bean id="dataSource" class="com.jolbox.bonecp.BoneCPDataSource">
		<property name="properties" ref="boneCpProps" />
	</bean>

	<bean class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- Bean for database creation & initialization -->
	<bean class="carrental.repository.util.DbInitializer" />

	<bean class="org.springframework.beans.factory.config.CustomEditorConfigurer">
		<property name="customEditors">
			<map>
				<entry key="org.joda.time.LocalDate" value="carrental.controllers.LocalDateEditor" />
			</map>
		</property>
	</bean>

	<!-- Configurer that replaces ${...} placeholders with values from a properties 
		file -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:longQueries.xml</value>
			</list>
		</property>
	</bean>

	<!-- <bean id="emf" -->
	<!-- class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean" -->
	<!-- p:packagesToScan="carrental.domain"> -->
	<!-- <property name="dataSource" ref="dataSource" /> -->
	<!-- <property name="persistenceXmlLocation" value="classpath:persistence.xml" 
		/> -->
	<!-- <property name="persistenceUnitName" value="myPu" /> -->
	<!-- <property name="jpaVendorAdapter" ref="hibernateJpaAdapter" /> -->
	<!-- </bean> -->

	<!-- <bean id="hibernateJpaAdapter" -->
	<!-- class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"> -->
	<!-- <property name="showSql" value="true" /> -->
	<!-- <property name="generateDdl" value="true" /> -->
	<!-- </bean> -->

	<!-- <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager"> -->
	<!-- <property name="entityManagerFactory" ref="emf" /> -->
	<!-- </bean> -->

	<!-- To enable EntityManager injection in Spring, we’ll need to configure 
		a PersistenceAnnotationBeanPostProcessor in Spring’s application context: -->
	<bean
		class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />

	<!-- Translate hibernate-specific exception into generic spring exceptions -->
	<!-- <bean -->
	<!-- class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" 
		/> -->

	<!-- =================================================================================== -->
	<!-- =================================================================================== -->
	<!-- =================================================================================== -->

	<bean id="myEmf"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="carrental.domain" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
		</property>
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.hbm2ddl.auto">create-drop</prop>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
			</props>
		</property>
	</bean>

	<!-- <bean id="dataSource" -->
	<!-- class="org.springframework.jdbc.datasource.DriverManagerDataSource"> -->
	<!-- <property name="driverClassName" value="com.mysql.jdbc.Driver" /> -->
	<!-- <property name="url" value="jdbc:mysql://localhost:3306/spring_jpa" 
		/> -->
	<!-- <property name="username" value="tutorialuser" /> -->
	<!-- <property name="password" value="tutorialmy5ql" /> -->
	<!-- </bean> -->

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="myEmf" />
	</bean>

	<tx:annotation-driven />

	<bean id="persistenceExceptionTranslationPostProcessor"
		class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />

</beans>
